plugins {
	id 'org.springframework.boot' version '2.2.0.BUILD-SNAPSHOT'
	id 'java'
	id 'checkstyle'
	id  'com.github.spotbugs' version '1.7.1'
	id 'pmd'
	id 'project-report'
	// id 'findbugs' // Java 9以上だと使えなさそう
	// id "gradle.site" version "0.6"
	// id "com.novoda.static-analysis" version "0.8.1"
	// id "com.monits.staticCodeAnalysis" version "2.6.10"
}
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '12'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springBootAdminVersion', '2.1.3')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'de.codecentric:spring-boot-admin-starter-server'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework.session:spring-session-jdbc'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	// runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
	}
}

checkstyle {
    toolVersion '8.19'
	ignoreFailures = true
	configFile = rootProject.file('config/checkstyle/checkstyle.xml') 
}

pmd {
    toolVersion '6.13.0'
	ignoreFailures = true
    ruleSets = [
            "category/java/bestpractices.xml",
            "category/java/codestyle.xml",
            "category/java/design.xml",
            "category/java/documentation.xml",
            "category/java/errorprone.xml",
            "category/java/multithreading.xml",
            "category/java/performance.xml",
            "category/java/security.xml"
    ]
}

spotbugs {
  toolVersion = '4.0.0-beta1'
}

// To generate an HTML report instead of XML
tasks.withType(com.github.spotbugs.SpotBugsTask) {
  reports.xml.enabled = false
  reports.html.enabled = true
}
// findbugs {
// 	ignoreFailures = true
// }

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false // これを書くとXML出力を止めることができる
        html.enabled = true
    }
} 
